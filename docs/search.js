window.pdocSearch = (function(){
/** elasticlunr - http://weixsong.github.io * Copyright (C) 2017 Oliver Nightingale * Copyright (C) 2017 Wei Song * MIT Licensed */!function(){function e(e){if(null===e||"object"!=typeof e)return e;var t=e.constructor();for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n]);return t}var t=function(e){var n=new t.Index;return n.pipeline.add(t.trimmer,t.stopWordFilter,t.stemmer),e&&e.call(n,n),n};t.version="0.9.5",lunr=t,t.utils={},t.utils.warn=function(e){return function(t){e.console&&console.warn&&console.warn(t)}}(this),t.utils.toString=function(e){return void 0===e||null===e?"":e.toString()},t.EventEmitter=function(){this.events={}},t.EventEmitter.prototype.addListener=function(){var e=Array.prototype.slice.call(arguments),t=e.pop(),n=e;if("function"!=typeof t)throw new TypeError("last argument must be a function");n.forEach(function(e){this.hasHandler(e)||(this.events[e]=[]),this.events[e].push(t)},this)},t.EventEmitter.prototype.removeListener=function(e,t){if(this.hasHandler(e)){var n=this.events[e].indexOf(t);-1!==n&&(this.events[e].splice(n,1),0==this.events[e].length&&delete this.events[e])}},t.EventEmitter.prototype.emit=function(e){if(this.hasHandler(e)){var t=Array.prototype.slice.call(arguments,1);this.events[e].forEach(function(e){e.apply(void 0,t)},this)}},t.EventEmitter.prototype.hasHandler=function(e){return e in this.events},t.tokenizer=function(e){if(!arguments.length||null===e||void 0===e)return[];if(Array.isArray(e)){var n=e.filter(function(e){return null===e||void 0===e?!1:!0});n=n.map(function(e){return t.utils.toString(e).toLowerCase()});var i=[];return n.forEach(function(e){var n=e.split(t.tokenizer.seperator);i=i.concat(n)},this),i}return e.toString().trim().toLowerCase().split(t.tokenizer.seperator)},t.tokenizer.defaultSeperator=/[\s\-]+/,t.tokenizer.seperator=t.tokenizer.defaultSeperator,t.tokenizer.setSeperator=function(e){null!==e&&void 0!==e&&"object"==typeof e&&(t.tokenizer.seperator=e)},t.tokenizer.resetSeperator=function(){t.tokenizer.seperator=t.tokenizer.defaultSeperator},t.tokenizer.getSeperator=function(){return t.tokenizer.seperator},t.Pipeline=function(){this._queue=[]},t.Pipeline.registeredFunctions={},t.Pipeline.registerFunction=function(e,n){n in t.Pipeline.registeredFunctions&&t.utils.warn("Overwriting existing registered function: "+n),e.label=n,t.Pipeline.registeredFunctions[n]=e},t.Pipeline.getRegisteredFunction=function(e){return e in t.Pipeline.registeredFunctions!=!0?null:t.Pipeline.registeredFunctions[e]},t.Pipeline.warnIfFunctionNotRegistered=function(e){var n=e.label&&e.label in this.registeredFunctions;n||t.utils.warn("Function is not registered with pipeline. This may cause problems when serialising the index.\n",e)},t.Pipeline.load=function(e){var n=new t.Pipeline;return e.forEach(function(e){var i=t.Pipeline.getRegisteredFunction(e);if(!i)throw new Error("Cannot load un-registered function: "+e);n.add(i)}),n},t.Pipeline.prototype.add=function(){var e=Array.prototype.slice.call(arguments);e.forEach(function(e){t.Pipeline.warnIfFunctionNotRegistered(e),this._queue.push(e)},this)},t.Pipeline.prototype.after=function(e,n){t.Pipeline.warnIfFunctionNotRegistered(n);var i=this._queue.indexOf(e);if(-1===i)throw new Error("Cannot find existingFn");this._queue.splice(i+1,0,n)},t.Pipeline.prototype.before=function(e,n){t.Pipeline.warnIfFunctionNotRegistered(n);var i=this._queue.indexOf(e);if(-1===i)throw new Error("Cannot find existingFn");this._queue.splice(i,0,n)},t.Pipeline.prototype.remove=function(e){var t=this._queue.indexOf(e);-1!==t&&this._queue.splice(t,1)},t.Pipeline.prototype.run=function(e){for(var t=[],n=e.length,i=this._queue.length,o=0;n>o;o++){for(var r=e[o],s=0;i>s&&(r=this._queue[s](r,o,e),void 0!==r&&null!==r);s++);void 0!==r&&null!==r&&t.push(r)}return t},t.Pipeline.prototype.reset=function(){this._queue=[]},t.Pipeline.prototype.get=function(){return this._queue},t.Pipeline.prototype.toJSON=function(){return this._queue.map(function(e){return t.Pipeline.warnIfFunctionNotRegistered(e),e.label})},t.Index=function(){this._fields=[],this._ref="id",this.pipeline=new t.Pipeline,this.documentStore=new t.DocumentStore,this.index={},this.eventEmitter=new t.EventEmitter,this._idfCache={},this.on("add","remove","update",function(){this._idfCache={}}.bind(this))},t.Index.prototype.on=function(){var e=Array.prototype.slice.call(arguments);return this.eventEmitter.addListener.apply(this.eventEmitter,e)},t.Index.prototype.off=function(e,t){return this.eventEmitter.removeListener(e,t)},t.Index.load=function(e){e.version!==t.version&&t.utils.warn("version mismatch: current "+t.version+" importing "+e.version);var n=new this;n._fields=e.fields,n._ref=e.ref,n.documentStore=t.DocumentStore.load(e.documentStore),n.pipeline=t.Pipeline.load(e.pipeline),n.index={};for(var i in e.index)n.index[i]=t.InvertedIndex.load(e.index[i]);return n},t.Index.prototype.addField=function(e){return this._fields.push(e),this.index[e]=new t.InvertedIndex,this},t.Index.prototype.setRef=function(e){return this._ref=e,this},t.Index.prototype.saveDocument=function(e){return this.documentStore=new t.DocumentStore(e),this},t.Index.prototype.addDoc=function(e,n){if(e){var n=void 0===n?!0:n,i=e[this._ref];this.documentStore.addDoc(i,e),this._fields.forEach(function(n){var o=this.pipeline.run(t.tokenizer(e[n]));this.documentStore.addFieldLength(i,n,o.length);var r={};o.forEach(function(e){e in r?r[e]+=1:r[e]=1},this);for(var s in r){var u=r[s];u=Math.sqrt(u),this.index[n].addToken(s,{ref:i,tf:u})}},this),n&&this.eventEmitter.emit("add",e,this)}},t.Index.prototype.removeDocByRef=function(e){if(e&&this.documentStore.isDocStored()!==!1&&this.documentStore.hasDoc(e)){var t=this.documentStore.getDoc(e);this.removeDoc(t,!1)}},t.Index.prototype.removeDoc=function(e,n){if(e){var n=void 0===n?!0:n,i=e[this._ref];this.documentStore.hasDoc(i)&&(this.documentStore.removeDoc(i),this._fields.forEach(function(n){var o=this.pipeline.run(t.tokenizer(e[n]));o.forEach(function(e){this.index[n].removeToken(e,i)},this)},this),n&&this.eventEmitter.emit("remove",e,this))}},t.Index.prototype.updateDoc=function(e,t){var t=void 0===t?!0:t;this.removeDocByRef(e[this._ref],!1),this.addDoc(e,!1),t&&this.eventEmitter.emit("update",e,this)},t.Index.prototype.idf=function(e,t){var n="@"+t+"/"+e;if(Object.prototype.hasOwnProperty.call(this._idfCache,n))return this._idfCache[n];var i=this.index[t].getDocFreq(e),o=1+Math.log(this.documentStore.length/(i+1));return this._idfCache[n]=o,o},t.Index.prototype.getFields=function(){return this._fields.slice()},t.Index.prototype.search=function(e,n){if(!e)return[];e="string"==typeof e?{any:e}:JSON.parse(JSON.stringify(e));var i=null;null!=n&&(i=JSON.stringify(n));for(var o=new t.Configuration(i,this.getFields()).get(),r={},s=Object.keys(e),u=0;u<s.length;u++){var a=s[u];r[a]=this.pipeline.run(t.tokenizer(e[a]))}var l={};for(var c in o){var d=r[c]||r.any;if(d){var f=this.fieldSearch(d,c,o),h=o[c].boost;for(var p in f)f[p]=f[p]*h;for(var p in f)p in l?l[p]+=f[p]:l[p]=f[p]}}var v,g=[];for(var p in l)v={ref:p,score:l[p]},this.documentStore.hasDoc(p)&&(v.doc=this.documentStore.getDoc(p)),g.push(v);return g.sort(function(e,t){return t.score-e.score}),g},t.Index.prototype.fieldSearch=function(e,t,n){var i=n[t].bool,o=n[t].expand,r=n[t].boost,s=null,u={};return 0!==r?(e.forEach(function(e){var n=[e];1==o&&(n=this.index[t].expandToken(e));var r={};n.forEach(function(n){var o=this.index[t].getDocs(n),a=this.idf(n,t);if(s&&"AND"==i){var l={};for(var c in s)c in o&&(l[c]=o[c]);o=l}n==e&&this.fieldSearchStats(u,n,o);for(var c in o){var d=this.index[t].getTermFrequency(n,c),f=this.documentStore.getFieldLength(c,t),h=1;0!=f&&(h=1/Math.sqrt(f));var p=1;n!=e&&(p=.15*(1-(n.length-e.length)/n.length));var v=d*a*h*p;c in r?r[c]+=v:r[c]=v}},this),s=this.mergeScores(s,r,i)},this),s=this.coordNorm(s,u,e.length)):void 0},t.Index.prototype.mergeScores=function(e,t,n){if(!e)return t;if("AND"==n){var i={};for(var o in t)o in e&&(i[o]=e[o]+t[o]);return i}for(var o in t)o in e?e[o]+=t[o]:e[o]=t[o];return e},t.Index.prototype.fieldSearchStats=function(e,t,n){for(var i in n)i in e?e[i].push(t):e[i]=[t]},t.Index.prototype.coordNorm=function(e,t,n){for(var i in e)if(i in t){var o=t[i].length;e[i]=e[i]*o/n}return e},t.Index.prototype.toJSON=function(){var e={};return this._fields.forEach(function(t){e[t]=this.index[t].toJSON()},this),{version:t.version,fields:this._fields,ref:this._ref,documentStore:this.documentStore.toJSON(),index:e,pipeline:this.pipeline.toJSON()}},t.Index.prototype.use=function(e){var t=Array.prototype.slice.call(arguments,1);t.unshift(this),e.apply(this,t)},t.DocumentStore=function(e){this._save=null===e||void 0===e?!0:e,this.docs={},this.docInfo={},this.length=0},t.DocumentStore.load=function(e){var t=new this;return t.length=e.length,t.docs=e.docs,t.docInfo=e.docInfo,t._save=e.save,t},t.DocumentStore.prototype.isDocStored=function(){return this._save},t.DocumentStore.prototype.addDoc=function(t,n){this.hasDoc(t)||this.length++,this.docs[t]=this._save===!0?e(n):null},t.DocumentStore.prototype.getDoc=function(e){return this.hasDoc(e)===!1?null:this.docs[e]},t.DocumentStore.prototype.hasDoc=function(e){return e in this.docs},t.DocumentStore.prototype.removeDoc=function(e){this.hasDoc(e)&&(delete this.docs[e],delete this.docInfo[e],this.length--)},t.DocumentStore.prototype.addFieldLength=function(e,t,n){null!==e&&void 0!==e&&0!=this.hasDoc(e)&&(this.docInfo[e]||(this.docInfo[e]={}),this.docInfo[e][t]=n)},t.DocumentStore.prototype.updateFieldLength=function(e,t,n){null!==e&&void 0!==e&&0!=this.hasDoc(e)&&this.addFieldLength(e,t,n)},t.DocumentStore.prototype.getFieldLength=function(e,t){return null===e||void 0===e?0:e in this.docs&&t in this.docInfo[e]?this.docInfo[e][t]:0},t.DocumentStore.prototype.toJSON=function(){return{docs:this.docs,docInfo:this.docInfo,length:this.length,save:this._save}},t.stemmer=function(){var e={ational:"ate",tional:"tion",enci:"ence",anci:"ance",izer:"ize",bli:"ble",alli:"al",entli:"ent",eli:"e",ousli:"ous",ization:"ize",ation:"ate",ator:"ate",alism:"al",iveness:"ive",fulness:"ful",ousness:"ous",aliti:"al",iviti:"ive",biliti:"ble",logi:"log"},t={icate:"ic",ative:"",alize:"al",iciti:"ic",ical:"ic",ful:"",ness:""},n="[^aeiou]",i="[aeiouy]",o=n+"[^aeiouy]*",r=i+"[aeiou]*",s="^("+o+")?"+r+o,u="^("+o+")?"+r+o+"("+r+")?$",a="^("+o+")?"+r+o+r+o,l="^("+o+")?"+i,c=new RegExp(s),d=new RegExp(a),f=new RegExp(u),h=new RegExp(l),p=/^(.+?)(ss|i)es$/,v=/^(.+?)([^s])s$/,g=/^(.+?)eed$/,m=/^(.+?)(ed|ing)$/,y=/.$/,S=/(at|bl|iz)$/,x=new RegExp("([^aeiouylsz])\\1$"),w=new RegExp("^"+o+i+"[^aeiouwxy]$"),I=/^(.+?[^aeiou])y$/,b=/^(.+?)(ational|tional|enci|anci|izer|bli|alli|entli|eli|ousli|ization|ation|ator|alism|iveness|fulness|ousness|aliti|iviti|biliti|logi)$/,E=/^(.+?)(icate|ative|alize|iciti|ical|ful|ness)$/,D=/^(.+?)(al|ance|ence|er|ic|able|ible|ant|ement|ment|ent|ou|ism|ate|iti|ous|ive|ize)$/,F=/^(.+?)(s|t)(ion)$/,_=/^(.+?)e$/,P=/ll$/,k=new RegExp("^"+o+i+"[^aeiouwxy]$"),z=function(n){var i,o,r,s,u,a,l;if(n.length<3)return n;if(r=n.substr(0,1),"y"==r&&(n=r.toUpperCase()+n.substr(1)),s=p,u=v,s.test(n)?n=n.replace(s,"$1$2"):u.test(n)&&(n=n.replace(u,"$1$2")),s=g,u=m,s.test(n)){var z=s.exec(n);s=c,s.test(z[1])&&(s=y,n=n.replace(s,""))}else if(u.test(n)){var z=u.exec(n);i=z[1],u=h,u.test(i)&&(n=i,u=S,a=x,l=w,u.test(n)?n+="e":a.test(n)?(s=y,n=n.replace(s,"")):l.test(n)&&(n+="e"))}if(s=I,s.test(n)){var z=s.exec(n);i=z[1],n=i+"i"}if(s=b,s.test(n)){var z=s.exec(n);i=z[1],o=z[2],s=c,s.test(i)&&(n=i+e[o])}if(s=E,s.test(n)){var z=s.exec(n);i=z[1],o=z[2],s=c,s.test(i)&&(n=i+t[o])}if(s=D,u=F,s.test(n)){var z=s.exec(n);i=z[1],s=d,s.test(i)&&(n=i)}else if(u.test(n)){var z=u.exec(n);i=z[1]+z[2],u=d,u.test(i)&&(n=i)}if(s=_,s.test(n)){var z=s.exec(n);i=z[1],s=d,u=f,a=k,(s.test(i)||u.test(i)&&!a.test(i))&&(n=i)}return s=P,u=d,s.test(n)&&u.test(n)&&(s=y,n=n.replace(s,"")),"y"==r&&(n=r.toLowerCase()+n.substr(1)),n};return z}(),t.Pipeline.registerFunction(t.stemmer,"stemmer"),t.stopWordFilter=function(e){return e&&t.stopWordFilter.stopWords[e]!==!0?e:void 0},t.clearStopWords=function(){t.stopWordFilter.stopWords={}},t.addStopWords=function(e){null!=e&&Array.isArray(e)!==!1&&e.forEach(function(e){t.stopWordFilter.stopWords[e]=!0},this)},t.resetStopWords=function(){t.stopWordFilter.stopWords=t.defaultStopWords},t.defaultStopWords={"":!0,a:!0,able:!0,about:!0,across:!0,after:!0,all:!0,almost:!0,also:!0,am:!0,among:!0,an:!0,and:!0,any:!0,are:!0,as:!0,at:!0,be:!0,because:!0,been:!0,but:!0,by:!0,can:!0,cannot:!0,could:!0,dear:!0,did:!0,"do":!0,does:!0,either:!0,"else":!0,ever:!0,every:!0,"for":!0,from:!0,get:!0,got:!0,had:!0,has:!0,have:!0,he:!0,her:!0,hers:!0,him:!0,his:!0,how:!0,however:!0,i:!0,"if":!0,"in":!0,into:!0,is:!0,it:!0,its:!0,just:!0,least:!0,let:!0,like:!0,likely:!0,may:!0,me:!0,might:!0,most:!0,must:!0,my:!0,neither:!0,no:!0,nor:!0,not:!0,of:!0,off:!0,often:!0,on:!0,only:!0,or:!0,other:!0,our:!0,own:!0,rather:!0,said:!0,say:!0,says:!0,she:!0,should:!0,since:!0,so:!0,some:!0,than:!0,that:!0,the:!0,their:!0,them:!0,then:!0,there:!0,these:!0,they:!0,"this":!0,tis:!0,to:!0,too:!0,twas:!0,us:!0,wants:!0,was:!0,we:!0,were:!0,what:!0,when:!0,where:!0,which:!0,"while":!0,who:!0,whom:!0,why:!0,will:!0,"with":!0,would:!0,yet:!0,you:!0,your:!0},t.stopWordFilter.stopWords=t.defaultStopWords,t.Pipeline.registerFunction(t.stopWordFilter,"stopWordFilter"),t.trimmer=function(e){if(null===e||void 0===e)throw new Error("token should not be undefined");return e.replace(/^\W+/,"").replace(/\W+$/,"")},t.Pipeline.registerFunction(t.trimmer,"trimmer"),t.InvertedIndex=function(){this.root={docs:{},df:0}},t.InvertedIndex.load=function(e){var t=new this;return t.root=e.root,t},t.InvertedIndex.prototype.addToken=function(e,t,n){for(var n=n||this.root,i=0;i<=e.length-1;){var o=e[i];o in n||(n[o]={docs:{},df:0}),i+=1,n=n[o]}var r=t.ref;n.docs[r]?n.docs[r]={tf:t.tf}:(n.docs[r]={tf:t.tf},n.df+=1)},t.InvertedIndex.prototype.hasToken=function(e){if(!e)return!1;for(var t=this.root,n=0;n<e.length;n++){if(!t[e[n]])return!1;t=t[e[n]]}return!0},t.InvertedIndex.prototype.getNode=function(e){if(!e)return null;for(var t=this.root,n=0;n<e.length;n++){if(!t[e[n]])return null;t=t[e[n]]}return t},t.InvertedIndex.prototype.getDocs=function(e){var t=this.getNode(e);return null==t?{}:t.docs},t.InvertedIndex.prototype.getTermFrequency=function(e,t){var n=this.getNode(e);return null==n?0:t in n.docs?n.docs[t].tf:0},t.InvertedIndex.prototype.getDocFreq=function(e){var t=this.getNode(e);return null==t?0:t.df},t.InvertedIndex.prototype.removeToken=function(e,t){if(e){var n=this.getNode(e);null!=n&&t in n.docs&&(delete n.docs[t],n.df-=1)}},t.InvertedIndex.prototype.expandToken=function(e,t,n){if(null==e||""==e)return[];var t=t||[];if(void 0==n&&(n=this.getNode(e),null==n))return t;n.df>0&&t.push(e);for(var i in n)"docs"!==i&&"df"!==i&&this.expandToken(e+i,t,n[i]);return t},t.InvertedIndex.prototype.toJSON=function(){return{root:this.root}},t.Configuration=function(e,n){var e=e||"";if(void 0==n||null==n)throw new Error("fields should not be null");this.config={};var i;try{i=JSON.parse(e),this.buildUserConfig(i,n)}catch(o){t.utils.warn("user configuration parse failed, will use default configuration"),this.buildDefaultConfig(n)}},t.Configuration.prototype.buildDefaultConfig=function(e){this.reset(),e.forEach(function(e){this.config[e]={boost:1,bool:"OR",expand:!1}},this)},t.Configuration.prototype.buildUserConfig=function(e,n){var i="OR",o=!1;if(this.reset(),"bool"in e&&(i=e.bool||i),"expand"in e&&(o=e.expand||o),"fields"in e)for(var r in e.fields)if(n.indexOf(r)>-1){var s=e.fields[r],u=o;void 0!=s.expand&&(u=s.expand),this.config[r]={boost:s.boost||0===s.boost?s.boost:1,bool:s.bool||i,expand:u}}else t.utils.warn("field name in user configuration not found in index instance fields");else this.addAllFields2UserConfig(i,o,n)},t.Configuration.prototype.addAllFields2UserConfig=function(e,t,n){n.forEach(function(n){this.config[n]={boost:1,bool:e,expand:t}},this)},t.Configuration.prototype.get=function(){return this.config},t.Configuration.prototype.reset=function(){this.config={}},lunr.SortedSet=function(){this.length=0,this.elements=[]},lunr.SortedSet.load=function(e){var t=new this;return t.elements=e,t.length=e.length,t},lunr.SortedSet.prototype.add=function(){var e,t;for(e=0;e<arguments.length;e++)t=arguments[e],~this.indexOf(t)||this.elements.splice(this.locationFor(t),0,t);this.length=this.elements.length},lunr.SortedSet.prototype.toArray=function(){return this.elements.slice()},lunr.SortedSet.prototype.map=function(e,t){return this.elements.map(e,t)},lunr.SortedSet.prototype.forEach=function(e,t){return this.elements.forEach(e,t)},lunr.SortedSet.prototype.indexOf=function(e){for(var t=0,n=this.elements.length,i=n-t,o=t+Math.floor(i/2),r=this.elements[o];i>1;){if(r===e)return o;e>r&&(t=o),r>e&&(n=o),i=n-t,o=t+Math.floor(i/2),r=this.elements[o]}return r===e?o:-1},lunr.SortedSet.prototype.locationFor=function(e){for(var t=0,n=this.elements.length,i=n-t,o=t+Math.floor(i/2),r=this.elements[o];i>1;)e>r&&(t=o),r>e&&(n=o),i=n-t,o=t+Math.floor(i/2),r=this.elements[o];return r>e?o:e>r?o+1:void 0},lunr.SortedSet.prototype.intersect=function(e){for(var t=new lunr.SortedSet,n=0,i=0,o=this.length,r=e.length,s=this.elements,u=e.elements;;){if(n>o-1||i>r-1)break;s[n]!==u[i]?s[n]<u[i]?n++:s[n]>u[i]&&i++:(t.add(s[n]),n++,i++)}return t},lunr.SortedSet.prototype.clone=function(){var e=new lunr.SortedSet;return e.elements=this.toArray(),e.length=e.elements.length,e},lunr.SortedSet.prototype.union=function(e){var t,n,i;this.length>=e.length?(t=this,n=e):(t=e,n=this),i=t.clone();for(var o=0,r=n.toArray();o<r.length;o++)i.add(r[o]);return i},lunr.SortedSet.prototype.toJSON=function(){return this.toArray()},function(e,t){"function"==typeof define&&define.amd?define(t):"object"==typeof exports?module.exports=t():e.elasticlunr=t()}(this,function(){return t})}();
    /** pdoc search index */const docs = [{"fullname": "ak_requests", "modulename": "ak_requests", "kind": "module", "doc": "<pre class=\"mermaid-pre\"><div class=\"mermaid\">graph TD\n    subgraph \"Client Application Layer\"\n        Client[\"Client Application\"]\n        RequestsSession[\"RequestsSession Interface\"]:::core\n    end\n\n    subgraph \"Core Features Layer\"\n        CoreFeatures[\"Core Request Handler\"]:::core\n        BulkRequests[\"Bulk Requests\"]:::core\n        SessionMgmt[\"Session Management\"]:::core\n    end\n\n    subgraph \"Extension Features Layer\"\n        BSParser[\"BeautifulSoup Parser\"]:::extension\n        FileDownload[\"File Downloads\"]:::extension\n        VideoDownload[\"Video Downloads\"]:::extension\n    end\n\n    subgraph \"Safety Layer\"\n        RateLimit[\"Rate Limiting\"]:::safety\n        RetryMech[\"Retry Mechanism\"]:::safety\n        AntiBotSystem[\"Anti-Bot Detection\"]:::safety\n        Logger[\"Logging System\"]:::safety\n    end\n\n    subgraph \"External Services Layer\"\n        HTTPEndpoints[\"HTTP/HTTPS Endpoints\"]:::external\n        AuthServices[\"Authentication Services\"]:::external\n        FileServers[\"File Servers\"]:::external\n    end\n\n    %% Connections\n    Client --&gt; RequestsSession\n    RequestsSession --&gt; CoreFeatures\n    RequestsSession --&gt; BulkRequests\n    RequestsSession --&gt; SessionMgmt\n\n    CoreFeatures --&gt; BSParser\n    CoreFeatures --&gt; FileDownload\n    CoreFeatures --&gt; VideoDownload\n\n    BSParser &amp; FileDownload &amp; VideoDownload --&gt; RateLimit\n    RateLimit --&gt; RetryMech\n    RetryMech --&gt; AntiBotSystem\n\n    AntiBotSystem --&gt; HTTPEndpoints\n    AntiBotSystem --&gt; AuthServices\n    AntiBotSystem --&gt; FileServers\n\n    Logger -.- CoreFeatures\n    Logger -.- BSParser\n    Logger -.- RateLimit\n    Logger -.- RetryMech\n    Logger -.- AntiBotSystem\n\n    %% Click Events\n    click CoreFeatures \"https://github.com/rpakishore/ak_requests/blob/main/src/ak_requests/request.py\"\n    click BSParser \"https://github.com/rpakishore/ak_requests/blob/main/src/ak_requests/beautifulsoup.py\"\n    click Logger \"https://github.com/rpakishore/ak_requests/blob/main/src/ak_requests/logger.py\"\n    click RequestsSession \"https://github.com/rpakishore/ak_requests/blob/main/src/ak_requests/__init__.py\"\n\n    %% Styling\n    classDef core fill:#2374ab,stroke:#000,stroke-width:1px,color:white\n    classDef extension fill:#ff7f50,stroke:#000,stroke-width:1px,color:white\n    classDef safety fill:#2ecc71,stroke:#000,stroke-width:1px,color:white\n    classDef external fill:#95a5a6,stroke:#000,stroke-width:1px,color:white\n\n    %% Legend\n    subgraph Legend\n        L1[\"Core Components\"]:::core\n        L2[\"Extension Features\"]:::extension\n        L3[\"Safety Features\"]:::safety\n        L4[\"External Services\"]:::external\n    end\n\n</div></pre>\n\n<!--- Heading --->\n\n<div align=\"center\">\n  <h1>ak_requests</h1>\n  <p>\n    Requests package with QOL improvements and anti-bot detection measures\n  </p>\n<h4>\n    <a href=\"https://rpakishore.github.io/ak_requests/\">Documentation</a>\n  </h4>\n</div>\n\n<p><br /></p>\n\n<p><img src=\"https://img.shields.io/github/commit-activity/m/rpakishore/ak_requests\" alt=\"GitHub commit activity\" />\n<img src=\"https://img.shields.io/github/last-commit/rpakishore/ak_requests\" alt=\"GitHub last commit\" />\n<a href=\"https://github.com/rpakishore/ak_requests/actions/workflows/test.yml\"><img src=\"https://github.com/rpakishore/ak_requests/actions/workflows/test.yml/badge.svg\" alt=\"tests\" /></a>\n<!-- <a href=\"https://github.com/rpakishore/ak_requests/actions/workflows/test.yml\"><img src=\"https://github.com/rpakishore/ak_requests/actions/workflows/test.yml/badge.svg\" alt=\"tests\" /></a> --></p>\n\n<p><!-- Table of Contents --></p>\n\n<h2>Table of Contents</h2>\n\n<ul>\n<li><a href=\"#1-about-the-project\">1. About the Project</a>\n<ul>\n<li><a href=\"#11-features\">1.1. Features</a></li>\n</ul></li>\n<li><a href=\"#2-getting-started\">2. Getting Started</a>\n<ul>\n<li><a href=\"#21-installation\">2.1. Installation</a></li>\n</ul></li>\n<li><a href=\"#3-usage\">3. Usage</a>\n<ul>\n<li><a href=\"#31-create-and-use-session\">3.1. Create and use session</a></li>\n<li><a href=\"#32-beautifulsoup\">3.2. Beautifulsoup</a></li>\n<li><a href=\"#33-download-files\">3.3. Download files</a></li>\n<li><a href=\"#34-other-functionality\">3.4. Other Functionality</a></li>\n</ul></li>\n<li><a href=\"#4-roadmap\">4. Roadmap</a></li>\n<li><a href=\"#5-license\">5. License</a></li>\n<li><a href=\"#6-contact\">6. Contact</a></li>\n</ul>\n\n<p><!-- About the Project --></p>\n\n<h2 id=\"1-about-the-project\">1. About the Project</h2>\n\n<p><code>ak_requests</code> is a Python package that provides an interface for automating requests tasks using <code>requests</code> package. It comes with quality of life improvements like retires, custom redirects, spacing out requests and shuffling requests to not trigger anti-bot measures.</p>\n\n<p><!-- Features --></p>\n\n<h3 id=\"11-features\">1.1. Features</h3>\n\n<ul>\n<li>Bulk requests handling</li>\n<li>Retry strategies including exponential back-off</li>\n<li>Built-in retries and timeouts</li>\n<li>Can log processes to file</li>\n<li>Handles downloads of files/videos</li>\n<li>Implemented default rate-limiting checks and process</li>\n<li>Session objects are serialized to be able to save/load sessions from file</li>\n<li>Can choose to handle exceptions or skip it completely with <code>RAISE_EXCEPTIONS</code> attribute</li>\n<li>Can support both basic <code>.basic_auth()</code> and OAuth <code>.oauth2_auth()</code> authentications.</li>\n<li>Improve rate-limiting with built-in APIs for dynamically adjusting request frequencies based on feedback (e.g., from Retry-After headers) and automatically spacing requests accordingly.</li>\n</ul>\n\n<p><!-- Getting Started --></p>\n\n<h2 id=\"2-getting-started\">2. Getting Started</h2>\n\n<p><!-- Installation --></p>\n\n<h3 id=\"21-installation\">2.1. Installation</h3>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code>pip<span class=\"w\"> </span>install<span class=\"w\"> </span>ak_requests@git+https://github.com/rpakishore/ak_requests\n</code></pre>\n</div>\n\n<p><!-- Usage --></p>\n\n<h2 id=\"3-usage\">3. Usage</h2>\n\n<h3 id=\"31-create-and-use-session\">3.1. Create and use session</h3>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"kn\">from</span><span class=\"w\"> </span><span class=\"nn\">ak_requests</span><span class=\"w\"> </span><span class=\"kn\">import</span> <span class=\"n\">RequestsSession</span>\n\n<span class=\"c1\"># Initialize session</span>\n<span class=\"n\">session</span> <span class=\"o\">=</span> <span class=\"n\">RequestsSession</span><span class=\"p\">(</span><span class=\"n\">log</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">,</span> <span class=\"n\">retries</span><span class=\"o\">=</span><span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"n\">log_level</span><span class=\"o\">=</span><span class=\"s1\">&#39;error&#39;</span><span class=\"p\">,</span> <span class=\"n\">timeout</span><span class=\"o\">=</span><span class=\"mi\">10</span><span class=\"p\">)</span> \n\n<span class=\"c1\">## Can update session level variables</span>\n<span class=\"n\">session</span><span class=\"o\">.</span><span class=\"n\">MIN_REQUEST_GAP</span> <span class=\"o\">=</span> <span class=\"mf\">1.5</span>   <span class=\"c1\"># seconds, Change min time bet. requests</span>\n<span class=\"n\">session</span><span class=\"o\">.</span><span class=\"n\">RAISE_ERRORS</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>    <span class=\"c1\"># raises RequestErrors, else returns None; defaults to True</span>\n\n<span class=\"c1\"># Update custom header</span>\n<span class=\"n\">session</span><span class=\"o\">.</span><span class=\"n\">update_header</span><span class=\"p\">({</span><span class=\"s1\">&#39;Connection&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;keep-alive&#39;</span><span class=\"p\">})</span>\n\n<span class=\"c1\"># set cookies</span>\n<span class=\"n\">session</span><span class=\"o\">.</span><span class=\"n\">update_cookies</span><span class=\"p\">([{</span><span class=\"s1\">&#39;name&#39;</span><span class=\"p\">:</span><span class=\"s1\">&#39;has_recent_activity&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;value&#39;</span><span class=\"p\">:</span><span class=\"s1\">&#39;1&#39;</span><span class=\"p\">}])</span>\n\n<span class=\"c1\"># Get requests</span>\n<span class=\"n\">res</span> <span class=\"o\">=</span> <span class=\"n\">session</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s1\">&#39;https://reqres.in/api/users?page=2&#39;</span><span class=\"p\">,</span> <span class=\"n\">data</span><span class=\"o\">=</span><span class=\"p\">{},</span> <span class=\"n\">proxies</span> <span class=\"o\">=</span> <span class=\"p\">{}</span> <span class=\"p\">)</span> <span class=\"c1\"># Can accept any requests parameters</span>\n\n<span class=\"c1\"># Make bulk requests</span>\n<span class=\"n\">urls</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s1\">&#39;https://reqres.in/api/users?page=2&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;https://reqres.in/api/unknown&#39;</span><span class=\"p\">]</span>\n<span class=\"n\">responses</span> <span class=\"o\">=</span> <span class=\"n\">session</span><span class=\"o\">.</span><span class=\"n\">bulk_get</span><span class=\"p\">(</span><span class=\"n\">urls</span><span class=\"p\">)</span>\n</code></pre>\n</div>\n\n<h3 id=\"32-beautifulsoup\">3.2. Beautifulsoup</h3>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"kn\">from</span><span class=\"w\"> </span><span class=\"nn\">ak_requests</span><span class=\"w\"> </span><span class=\"kn\">import</span> <span class=\"n\">soupify</span>\n<span class=\"n\">res</span> <span class=\"o\">=</span> <span class=\"n\">session</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s1\">&#39;https://reqres.in/api/users?page=2&#39;</span><span class=\"p\">)</span>\n<span class=\"n\">soup</span> <span class=\"o\">=</span> <span class=\"n\">soupify</span><span class=\"p\">(</span><span class=\"n\">res</span><span class=\"p\">)</span>\n\n<span class=\"c1\">## or </span>\n<span class=\"n\">soup</span><span class=\"p\">,</span> <span class=\"n\">res</span> <span class=\"o\">=</span> <span class=\"n\">session</span><span class=\"o\">.</span><span class=\"n\">soup</span><span class=\"p\">(</span><span class=\"s1\">&#39;https://reqres.in/api/users?page=2&#39;</span><span class=\"p\">)</span>\n\n<span class=\"c1\">## Also works for bulk requests</span>\n<span class=\"n\">soups</span><span class=\"p\">,</span> <span class=\"n\">ress</span> <span class=\"o\">=</span> <span class=\"n\">session</span><span class=\"o\">.</span><span class=\"n\">bulk_soup</span><span class=\"p\">(</span><span class=\"n\">urls</span><span class=\"p\">)</span>\n</code></pre>\n</div>\n\n<h3 id=\"33-download-files\">3.3. Download files</h3>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"c1\"># Check if file is downloadble</span>\n<span class=\"n\">session</span><span class=\"o\">.</span><span class=\"n\">downloadble</span><span class=\"p\">(</span><span class=\"s1\">&#39;https://www.youtube.com/watch?v=9bZkp7q19f0&#39;</span><span class=\"p\">)</span>  <span class=\"c1\">#False</span>\n\n<span class=\"n\">session</span><span class=\"o\">.</span><span class=\"n\">downloadble</span><span class=\"p\">(</span><span class=\"s1\">&#39;http://google.com/favicon.ico&#39;</span><span class=\"p\">)</span> <span class=\"c1\">#True</span>\n\n<span class=\"n\">session</span><span class=\"o\">.</span><span class=\"n\">download</span><span class=\"p\">(</span>\n  <span class=\"n\">url</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;http://google.com/favicon.ico&#39;</span><span class=\"p\">,</span>  <span class=\"c1\">#URL to download</span>\n  <span class=\"n\">fifopath</span><span class=\"o\">=</span><span class=\"s1\">&#39;C:</span><span class=\"se\">\\\\</span><span class=\"s1\">&#39;</span><span class=\"p\">,</span> <span class=\"c1\">#Can be folderpath, filename or filepath. If existing folder specified - will extract filename from url contents</span>\n  <span class=\"n\">confirm_downloadble</span> <span class=\"o\">=</span> <span class=\"kc\">False</span> <span class=\"c1\">#Will return `None`, if url not downloadble</span>\n<span class=\"p\">)</span>\n\n<span class=\"c1\"># Download videos</span>\n<span class=\"kn\">from</span><span class=\"w\"> </span><span class=\"nn\">pathlib</span><span class=\"w\"> </span><span class=\"kn\">import</span> <span class=\"n\">Path</span>\n<span class=\"n\">video_info</span> <span class=\"o\">=</span> <span class=\"n\">session</span><span class=\"o\">.</span><span class=\"n\">video</span><span class=\"p\">(</span><span class=\"n\">url</span><span class=\"o\">=</span><span class=\"s1\">&#39;https://www.youtube.com/watch?v=BaW_jenozKc&#39;</span><span class=\"p\">,</span> \n              <span class=\"n\">folderpath</span><span class=\"o\">=</span><span class=\"n\">Path</span><span class=\"p\">(</span><span class=\"s1\">&#39;.&#39;</span><span class=\"p\">),</span>\n              <span class=\"n\">audio_only</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">)</span> <span class=\"c1\">#Downloads the video to specified path and returns dict of video info</span>\n</code></pre>\n</div>\n\n<h3 id=\"34-other-functionality\">3.4. Other Functionality</h3>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"c1\"># Save/Restore session to/from file</span>\n<span class=\"c1\">## Save the session state to a file</span>\n<span class=\"n\">session</span><span class=\"o\">.</span><span class=\"n\">save_session</span><span class=\"p\">(</span><span class=\"s1\">&#39;session_state.pkl&#39;</span><span class=\"p\">)</span>\n\n<span class=\"c1\">## Later, you can load the session state back</span>\n<span class=\"n\">restored_session</span> <span class=\"o\">=</span> <span class=\"n\">RequestsSession</span><span class=\"o\">.</span><span class=\"n\">load_session</span><span class=\"p\">(</span><span class=\"s1\">&#39;session_state.pkl&#39;</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Authentication</span>\n<span class=\"n\">session</span><span class=\"o\">.</span><span class=\"n\">setup_auth_basic</span><span class=\"p\">(</span><span class=\"n\">username</span><span class=\"o\">=</span><span class=\"s2\">&quot;johndoe&quot;</span><span class=\"p\">,</span> <span class=\"n\">password</span><span class=\"o\">=</span><span class=\"s2\">&quot;12345678&quot;</span><span class=\"p\">)</span> <span class=\"c1\">## basic auth</span>\n<span class=\"n\">session</span><span class=\"o\">.</span><span class=\"n\">setup_auth_oauth2</span><span class=\"p\">(</span><span class=\"n\">token</span><span class=\"o\">=</span><span class=\"s1\">&#39;x0-xxxxxxxxxxxxxxxxxxxxxxxx&#39;</span><span class=\"p\">)</span>    <span class=\"c1\">## OAuth authentication</span>\n</code></pre>\n</div>\n\n<p><!-- Roadmap --></p>\n\n<h2 id=\"4-roadmap\">4. Roadmap</h2>\n\n<ul>\n<li><strong>Proxy Support</strong>: Allow support for rotating proxy lists to manage a large volume of requests without hitting rate limits or triggering anti-bot measures. Integrate features like automatic proxy testing and failover in case of a broken proxy.</li>\n<li><strong>Asynchronous Requests</strong>: Implement asynchronous request handling using asyncio or aiohttp. This can significantly enhance performance when dealing with multiple concurrent requests, especially for I/O-bound tasks.</li>\n<li><strong>Response Caching</strong>: Add a caching layer for GET requests to avoid redundant network requests and speed up frequently accessed data retrieval. Allow users to configure the caching mechanism, cache duration, and invalidation strategies.</li>\n<li><strong>Request Preprocessing and Postprocessing</strong>: Introduce hooks for preprocessing and postprocessing of requests and responses. Users could modify request headers, log specific details, or automatically retry certain status codes like 429.</li>\n<li><strong>File Upload Support</strong>: Enable multipart/form-data requests for uploading files, which could expand the functionality to handle file transfers in both directions.</li>\n<li><strong>Support for Additional Auth Schemes</strong>: Beyond basic and OAuth2, consider adding support for other authentication methods, like token-based, bearer tokens, and cookie-based authentication, to broaden compatibility with different APIs.</li>\n<li><strong>Session Management Enhancements</strong>: Improve session handling by introducing automatic session refresh or re-authentication mechanisms, especially for OAuth tokens with limited lifespans.</li>\n<li><strong>Download Manager with Resumable Downloads</strong>: Enhance the file download feature to support resumable downloads for large files. This can improve robustness when downloading large datasets or videos over unreliable networks.</li>\n<li><strong>Customizable User-Agent Spoofing</strong>: Provide built-in options for easily rotating or randomizing User-Agent strings to bypass common anti-bot mechanisms. A customizable header interface might also enhance flexibility.</li>\n<li><strong>Extended Logging and Monitoring</strong>: Introduce more detailed and configurable logging options, such as logging retries, rate limits hit, request/response times, and any exceptions caught. This could help track the performance and reliability of the request handling process.</li>\n<li><strong>Improved Error Handling</strong>: Implement more sophisticated error classification to differentiate between recoverable and non-recoverable errors. Offer users the ability to handle or ignore specific HTTP status codes and exceptions.</li>\n<li><strong>Interactive Progress Bars</strong>: For file downloads or bulk requests, adding progress indicators or real-time updates for long-running tasks could improve the user experience.</li>\n<li><strong>Built-in CLI Tool</strong>: Create a command-line interface for ak_requests, enabling users to perform basic request tasks like GET, POST, or bulk downloads from the terminal without writing Python code.</li>\n</ul>\n\n<p><!-- License --></p>\n\n<h2 id=\"5-license\">5. License</h2>\n\n<p>See LICENSE for more information.</p>\n\n<p><!-- Contact --></p>\n\n<h2 id=\"6-contact\">6. Contact</h2>\n\n<p>Arun Kishore - <a href=\"mailto:pypi@rpakishore.co.in\">@rpakishore</a></p>\n\n<p>Project Link: <a href=\"https://github.com/rpakishore/ak_requests\">https://github.com/rpakishore/ak_requests</a></p>\n"}, {"fullname": "ak_requests.adapters", "modulename": "ak_requests.adapters", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "ak_requests.adapters.TimeoutHTTPAdapter", "modulename": "ak_requests.adapters", "qualname": "TimeoutHTTPAdapter", "kind": "class", "doc": "<p>Courtesy of article: <a href=\"https://findwork.dev/blog/advanced-usage-python-requests-timeouts-retries-hooks/\">Advanced usage of Python requests - timeouts, retries, hooks</a></p>\n", "bases": "requests.adapters.HTTPAdapter"}, {"fullname": "ak_requests.adapters.TimeoutHTTPAdapter.__init__", "modulename": "ak_requests.adapters", "qualname": "TimeoutHTTPAdapter.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">max_retries</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">5</span>, </span><span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span>)</span>"}, {"fullname": "ak_requests.adapters.TimeoutHTTPAdapter.DEFAULT_TIMEOUT_s", "modulename": "ak_requests.adapters", "qualname": "TimeoutHTTPAdapter.DEFAULT_TIMEOUT_s", "kind": "variable", "doc": "<p></p>\n", "default_value": "5"}, {"fullname": "ak_requests.adapters.TimeoutHTTPAdapter.timeout", "modulename": "ak_requests.adapters", "qualname": "TimeoutHTTPAdapter.timeout", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "ak_requests.adapters.TimeoutHTTPAdapter.send", "modulename": "ak_requests.adapters", "qualname": "TimeoutHTTPAdapter.send", "kind": "function", "doc": "<p>Sends PreparedRequest object. Returns Response object.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>request</strong>:  The <code>PreparedRequest &lt;PreparedRequest&gt;</code> being sent.</li>\n<li><strong>stream</strong>:  (optional) Whether to stream the request content.</li>\n<li><strong>timeout</strong>:  (optional) How long to wait for the server to send\ndata before giving up, as a float, or a :ref:<code>(connect timeout,\nread timeout) &lt;timeouts&gt;</code> tuple.</li>\n<li><strong>verify</strong>:  (optional) Either a boolean, in which case it controls whether\nwe verify the server's TLS certificate, or a string, in which case it\nmust be a path to a CA bundle to use</li>\n<li><strong>cert</strong>:  (optional) Any user-provided SSL certificate to be trusted.</li>\n<li><strong>proxies</strong>:  (optional) The proxies dictionary to apply to the request.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">request</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "ak_requests.beautifulsoup", "modulename": "ak_requests.beautifulsoup", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "ak_requests.beautifulsoup.soupify", "modulename": "ak_requests.beautifulsoup", "qualname": "soupify", "kind": "function", "doc": "<p>Converts a response object into a BeautifulSoup object.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">res</span><span class=\"p\">:</span> <span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Response</span></span><span class=\"return-annotation\">) -> <span class=\"n\">bs4</span><span class=\"o\">.</span><span class=\"n\">BeautifulSoup</span>:</span></span>", "funcdef": "def"}, {"fullname": "ak_requests.data", "modulename": "ak_requests.data", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "ak_requests.data.Cookie", "modulename": "ak_requests.data", "qualname": "Cookie", "kind": "class", "doc": "<p>Cookie class for storing cookie information.</p>\n"}, {"fullname": "ak_requests.data.Cookie.__init__", "modulename": "ak_requests.data", "qualname": "Cookie.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">value</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span>)</span>"}, {"fullname": "ak_requests.data.Cookie.name", "modulename": "ak_requests.data", "qualname": "Cookie.name", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str"}, {"fullname": "ak_requests.data.Cookie.value", "modulename": "ak_requests.data", "qualname": "Cookie.value", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str"}, {"fullname": "ak_requests.logger", "modulename": "ak_requests.logger", "kind": "module", "doc": "<p>Module for custom logging functionality with file and stream handlers.</p>\n\n<p>This module provides a custom logging class that creates both console and file-based\nlogs with consistent formatting and user-specific log files.</p>\n"}, {"fullname": "ak_requests.logger.Log", "modulename": "ak_requests.logger", "qualname": "Log", "kind": "class", "doc": "<p>A custom logging class that provides both file and console logging capabilities.</p>\n\n<p>This class wraps Python's built-in logging functionality to provide a simplified\ninterface for logging messages. It automatically creates log files in a 'logs'\ndirectory using the current user's username and month as part of the filename.</p>\n\n<h6 id=\"attributes\">Attributes:</h6>\n\n<ul>\n<li><strong>logger (logging.Logger):</strong>  The underlying logger instance configured with\nboth stream and file handlers.</li>\n</ul>\n\n<h6 id=\"example\">Example:</h6>\n\n<blockquote>\n  <div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">log</span> <span class=\"o\">=</span> <span class=\"n\">Log</span><span class=\"p\">()</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">log</span><span class=\"o\">.</span><span class=\"n\">info</span><span class=\"p\">(</span><span class=\"s2\">&quot;Starting application&quot;</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">log</span><span class=\"o\">.</span><span class=\"n\">error</span><span class=\"p\">(</span><span class=\"s2\">&quot;An error occurred&quot;</span><span class=\"p\">)</span>\n</code></pre>\n  </div>\n</blockquote>\n"}, {"fullname": "ak_requests.logger.Log.__init__", "modulename": "ak_requests.logger", "qualname": "Log.__init__", "kind": "function", "doc": "<p>Initialize the logger with both stream and file handlers.</p>\n\n<p>Sets up a logger instance with the current user's username, configures\nformatting for log messages, and creates handlers for both console output\nand file logging. The log files are stored in a 'logs' directory with\nfilenames incorporating the username and current month.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">()</span>"}, {"fullname": "ak_requests.logger.Log.logger", "modulename": "ak_requests.logger", "qualname": "Log.logger", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "ak_requests.logger.Log.debug", "modulename": "ak_requests.logger", "qualname": "Log.debug", "kind": "function", "doc": "<p>Log a debug message.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>msg:</strong>  The message to log at DEBUG level.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">msg</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "ak_requests.logger.Log.info", "modulename": "ak_requests.logger", "qualname": "Log.info", "kind": "function", "doc": "<p>Log an info message.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>msg:</strong>  The message to log at INFO level.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">msg</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "ak_requests.logger.Log.warning", "modulename": "ak_requests.logger", "qualname": "Log.warning", "kind": "function", "doc": "<p>Log a warning message.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>msg:</strong>  The message to log at WARNING level.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">msg</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "ak_requests.logger.Log.error", "modulename": "ak_requests.logger", "qualname": "Log.error", "kind": "function", "doc": "<p>Log an error message.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>msg:</strong>  The message to log at ERROR level.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">msg</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "ak_requests.logger.Log.critical", "modulename": "ak_requests.logger", "qualname": "Log.critical", "kind": "function", "doc": "<p>Log a critical message.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>msg:</strong>  The message to log at CRITICAL level.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">msg</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "ak_requests.logger.Log.log", "modulename": "ak_requests.logger", "qualname": "Log.log", "kind": "function", "doc": "<p>Log a message at a specified level.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>level:</strong>  The logging level to use (e.g., logging.INFO, logging.ERROR)</li>\n<li><strong>msg:</strong>  The message to log at the specified level.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">level</span>, </span><span class=\"param\"><span class=\"n\">msg</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "ak_requests.logger.Log.setLevel", "modulename": "ak_requests.logger", "qualname": "Log.setLevel", "kind": "function", "doc": "<p>Set the minimum logging level for the logger.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>level:</strong>  The minimum logging level (e.g., logging.DEBUG, logging.INFO)</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">level</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "ak_requests.logger.Log.disable", "modulename": "ak_requests.logger", "qualname": "Log.disable", "kind": "function", "doc": "<p>Disable all logging.</p>\n\n<p>Disables all logging by setting the logging level to 50 (CRITICAL + 10),\neffectively preventing any messages from being logged.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "ak_requests.request", "modulename": "ak_requests.request", "kind": "module", "doc": "<p>A module providing an enhanced requests Session with rate limiting and additional features.</p>\n\n<p>This module extends the basic requests Session class to provide additional functionality\nincluding rate limiting, retry handling, BeautifulSoup integration, file downloading,\nand video downloading capabilities using yt-dlp.</p>\n"}, {"fullname": "ak_requests.request.RequestsSession", "modulename": "ak_requests.request", "qualname": "RequestsSession", "kind": "class", "doc": "<p>An enhanced requests Session class with additional features and rate limiting.</p>\n\n<p>This class extends the requests Session class to provide:</p>\n\n<ul>\n<li>Automatic rate limiting and request gaps</li>\n<li>Rate limit handling based on response headers</li>\n<li>Retry mechanisms with timeouts</li>\n<li>BeautifulSoup integration</li>\n<li>File and video downloading capabilities</li>\n<li>Session state persistence</li>\n<li>Multiple authentication methods</li>\n</ul>\n\n<h6 id=\"attributes\">Attributes:</h6>\n\n<ul>\n<li><strong>MIN_REQUEST_GAP (float):</strong>  Minimum time (in seconds) between requests</li>\n<li><strong>last_request_time (float):</strong>  Timestamp of the last request</li>\n<li><strong>RAISE_ERRORS (bool):</strong>  Whether to raise exceptions on request errors</li>\n<li><strong>retries (int):</strong>  Number of retry attempts for failed requests</li>\n<li><strong>log (Log | None):</strong>  Logger instance if logging is enabled</li>\n<li><strong>rate_limit_remaining (int | None):</strong>  Remaining requests allowed by rate limit</li>\n<li><strong>rate_limit_reset (float):</strong>  Timestamp when rate limit resets</li>\n<li><strong>retry_after (float | None):</strong>  Time to wait before next request per Retry-After header</li>\n</ul>\n\n<h6 id=\"example\">Example:</h6>\n\n<blockquote>\n  <div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">session</span> <span class=\"o\">=</span> <span class=\"n\">RequestsSession</span><span class=\"p\">(</span><span class=\"n\">log</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"n\">retries</span><span class=\"o\">=</span><span class=\"mi\">3</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">response</span> <span class=\"o\">=</span> <span class=\"n\">session</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s1\">&#39;https://api.example.com/data&#39;</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">soup</span><span class=\"p\">,</span> <span class=\"n\">response</span> <span class=\"o\">=</span> <span class=\"n\">session</span><span class=\"o\">.</span><span class=\"n\">soup</span><span class=\"p\">(</span><span class=\"s1\">&#39;https://example.com&#39;</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">session</span><span class=\"o\">.</span><span class=\"n\">download</span><span class=\"p\">(</span><span class=\"s1\">&#39;https://example.com/file.pdf&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;downloads/file.pdf&#39;</span><span class=\"p\">)</span>\n</code></pre>\n  </div>\n</blockquote>\n", "bases": "requests.sessions.Session"}, {"fullname": "ak_requests.request.RequestsSession.__init__", "modulename": "ak_requests.request", "qualname": "RequestsSession.__init__", "kind": "function", "doc": "<p>Initialize the RequestsSession with specified configuration.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>log:</strong>  Whether to enable logging</li>\n<li><strong>retries:</strong>  Number of retry attempts for failed requests</li>\n<li><strong>log_level:</strong>  Logging level to use (\"debug\", \"info\", or \"error\")</li>\n<li><strong>timeout:</strong>  Request timeout in seconds</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">log</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">retries</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">5</span>,</span><span class=\"param\">\t<span class=\"n\">log_level</span><span class=\"p\">:</span> <span class=\"n\">Literal</span><span class=\"p\">[</span><span class=\"s1\">&#39;debug&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;info&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;error&#39;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;info&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">timeout</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mi\">5</span></span>)</span>"}, {"fullname": "ak_requests.request.RequestsSession.MIN_REQUEST_GAP", "modulename": "ak_requests.request", "qualname": "RequestsSession.MIN_REQUEST_GAP", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float", "default_value": "0.9"}, {"fullname": "ak_requests.request.RequestsSession.last_request_time", "modulename": "ak_requests.request", "qualname": "RequestsSession.last_request_time", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float", "default_value": "1736954608.109451"}, {"fullname": "ak_requests.request.RequestsSession.RAISE_ERRORS", "modulename": "ak_requests.request", "qualname": "RequestsSession.RAISE_ERRORS", "kind": "variable", "doc": "<p></p>\n", "annotation": ": bool", "default_value": "True"}, {"fullname": "ak_requests.request.RequestsSession.retries", "modulename": "ak_requests.request", "qualname": "RequestsSession.retries", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "ak_requests.request.RequestsSession.log", "modulename": "ak_requests.request", "qualname": "RequestsSession.log", "kind": "variable", "doc": "<p></p>\n", "annotation": ": ak_requests.logger.Log | None"}, {"fullname": "ak_requests.request.RequestsSession.check_rate_limit", "modulename": "ak_requests.request", "qualname": "RequestsSession.check_rate_limit", "kind": "function", "doc": "<p>Checks the rate limit and waits if necessary before making the next request.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "ak_requests.request.RequestsSession.update_rate_limit", "modulename": "ak_requests.request", "qualname": "RequestsSession.update_rate_limit", "kind": "function", "doc": "<p>Updates rate limit information based on response headers.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>response:</strong>  Response object containing rate limit headers</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">response</span><span class=\"p\">:</span> <span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Response</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "ak_requests.request.RequestsSession.set_loglevel", "modulename": "ak_requests.request", "qualname": "RequestsSession.set_loglevel", "kind": "function", "doc": "<p>Set the logging level for the session.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>level:</strong>  Desired logging level (\"debug\", \"info\", or \"error\")</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">level</span><span class=\"p\">:</span> <span class=\"n\">Literal</span><span class=\"p\">[</span><span class=\"s1\">&#39;debug&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;info&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;error&#39;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;info&#39;</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "ak_requests.request.RequestsSession.get", "modulename": "ak_requests.request", "qualname": "RequestsSession.get", "kind": "function", "doc": "<p>Send a GET request with rate limiting and error handling.</p>\n\n<p>Extends the base Session.get() method to include rate limiting,\nrequest gap enforcement, and error handling.</p>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>Response object from the request</p>\n</blockquote>\n\n<h6 id=\"raises\">Raises:</h6>\n\n<ul>\n<li><strong>RequestException:</strong>  If RAISE_ERRORS is True and a request fails</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span><span class=\"return-annotation\">) -> <span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Response</span>:</span></span>", "funcdef": "def"}, {"fullname": "ak_requests.request.RequestsSession.bulk_get", "modulename": "ak_requests.request", "qualname": "RequestsSession.bulk_get", "kind": "function", "doc": "<p>Send multiple GET requests with randomized order to avoid detection.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>urls:</strong>  List of URLs to request</li>\n<li><strong>*args:</strong>  Additional positional arguments for get()</li>\n<li><strong>**kwargs:</strong>  Additional keyword arguments for get()</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>List of Response objects in the same order as input URLs</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">urls</span><span class=\"p\">:</span> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span>, </span><span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Response</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "ak_requests.request.RequestsSession.update_header", "modulename": "ak_requests.request", "qualname": "RequestsSession.update_header", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">header</span><span class=\"p\">:</span> <span class=\"nb\">dict</span></span><span class=\"return-annotation\">) -> <span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">sessions</span><span class=\"o\">.</span><span class=\"n\">Session</span>:</span></span>", "funcdef": "def"}, {"fullname": "ak_requests.request.RequestsSession.update_cookies", "modulename": "ak_requests.request", "qualname": "RequestsSession.update_cookies", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">cookies</span><span class=\"p\">:</span> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"nb\">dict</span> <span class=\"o\">|</span> <span class=\"n\">ak_requests</span><span class=\"o\">.</span><span class=\"n\">data</span><span class=\"o\">.</span><span class=\"n\">Cookie</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">sessions</span><span class=\"o\">.</span><span class=\"n\">Session</span>:</span></span>", "funcdef": "def"}, {"fullname": "ak_requests.request.RequestsSession.soup", "modulename": "ak_requests.request", "qualname": "RequestsSession.soup", "kind": "function", "doc": "<p>Send a GET request and parse the response with BeautifulSoup.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>url:</strong>  URL to request</li>\n<li><strong>*args:</strong>  Additional positional arguments for get()</li>\n<li><strong>**kwargs:</strong>  Additional keyword arguments for get()</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>Tuple of (BeautifulSoup object, Response object)</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">url</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"o\">*</span><span class=\"n\">args</span>,</span><span class=\"param\">\t<span class=\"o\">**</span><span class=\"n\">kwargs</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">tuple</span><span class=\"p\">[</span><span class=\"n\">bs4</span><span class=\"o\">.</span><span class=\"n\">BeautifulSoup</span><span class=\"p\">,</span> <span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Response</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "ak_requests.request.RequestsSession.bulk_soup", "modulename": "ak_requests.request", "qualname": "RequestsSession.bulk_soup", "kind": "function", "doc": "<p>Send multiple GET requests and parse responses with BeautifulSoup.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>urls:</strong>  List of URLs to request</li>\n<li><strong>*args:</strong>  Additional positional arguments for get()</li>\n<li><strong>**kwargs:</strong>  Additional keyword arguments for get()</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>Tuple of (list of BeautifulSoup objects, list of Response objects)</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">urls</span><span class=\"p\">:</span> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"o\">*</span><span class=\"n\">args</span>,</span><span class=\"param\">\t<span class=\"o\">**</span><span class=\"n\">kwargs</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">tuple</span><span class=\"p\">[</span><span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"n\">bs4</span><span class=\"o\">.</span><span class=\"n\">BeautifulSoup</span><span class=\"p\">],</span> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Response</span><span class=\"p\">]]</span>:</span></span>", "funcdef": "def"}, {"fullname": "ak_requests.request.RequestsSession.download", "modulename": "ak_requests.request", "qualname": "RequestsSession.download", "kind": "function", "doc": "<p>Download a file from a URL.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>url:</strong>  URL to download from</li>\n<li><strong>fifopath:</strong>  Target path for downloaded file</li>\n<li><strong>confirm_downloadble:</strong>  Whether to check content-type before downloading</li>\n<li><strong>**kwargs:</strong>  Additional keyword arguments for get()</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>Path to downloaded file or None if not downloadable</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">url</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">fifopath</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"n\">pathlib</span><span class=\"o\">.</span><span class=\"n\">_local</span><span class=\"o\">.</span><span class=\"n\">Path</span>,</span><span class=\"param\">\t<span class=\"n\">confirm_downloadble</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"o\">**</span><span class=\"n\">kwargs</span></span><span class=\"return-annotation\">) -> <span class=\"n\">pathlib</span><span class=\"o\">.</span><span class=\"n\">_local</span><span class=\"o\">.</span><span class=\"n\">Path</span> <span class=\"o\">|</span> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "ak_requests.request.RequestsSession.downloadble", "modulename": "ak_requests.request", "qualname": "RequestsSession.downloadble", "kind": "function", "doc": "<p>Ensures the <code>content-type</code> of specified url is downloadable</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">url</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, {"fullname": "ak_requests.request.RequestsSession.video", "modulename": "ak_requests.request", "qualname": "RequestsSession.video", "kind": "function", "doc": "<p>Download video or audio from supported platforms using yt-dlp.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>url:</strong>  Video URL to download</li>\n<li><strong>folderpath:</strong>  Target folder for downloaded file</li>\n<li><strong>audio_only:</strong>  Whether to download only audio</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>Dictionary containing video metadata</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">url</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">folderpath</span><span class=\"p\">:</span> <span class=\"n\">pathlib</span><span class=\"o\">.</span><span class=\"n\">_local</span><span class=\"o\">.</span><span class=\"n\">Path</span> <span class=\"o\">=</span> <span class=\"n\">WindowsPath</span><span class=\"p\">(</span><span class=\"s1\">&#39;.&#39;</span><span class=\"p\">)</span>,</span><span class=\"param\">\t<span class=\"n\">audio_only</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">dict</span>:</span></span>", "funcdef": "def"}, {"fullname": "ak_requests.request.RequestsSession.save_session", "modulename": "ak_requests.request", "qualname": "RequestsSession.save_session", "kind": "function", "doc": "<p>Save the current session state to a file.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>file_path:</strong>  Path where session state will be saved</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">file_path</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "ak_requests.request.RequestsSession.load_session", "modulename": "ak_requests.request", "qualname": "RequestsSession.load_session", "kind": "function", "doc": "<p>Load a session state from a file.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>file_path:</strong>  Path to saved session state</li>\n<li><strong>log:</strong>  Whether to enable logging</li>\n<li><strong>retries:</strong>  Number of retry attempts</li>\n<li><strong>log_level:</strong>  Logging level to use</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>RequestsSession instance with loaded state</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">cls</span>,</span><span class=\"param\">\t<span class=\"n\">file_path</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">log</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">retries</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">5</span>,</span><span class=\"param\">\t<span class=\"n\">log_level</span><span class=\"p\">:</span> <span class=\"n\">Literal</span><span class=\"p\">[</span><span class=\"s1\">&#39;debug&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;info&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;error&#39;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;info&#39;</span></span><span class=\"return-annotation\">) -> <span class=\"n\">ak_requests</span><span class=\"o\">.</span><span class=\"n\">request</span><span class=\"o\">.</span><span class=\"n\">RequestsSession</span>:</span></span>", "funcdef": "def"}, {"fullname": "ak_requests.request.RequestsSession.setup_auth_oauth2", "modulename": "ak_requests.request", "qualname": "RequestsSession.setup_auth_oauth2", "kind": "function", "doc": "<p>Configure OAuth2 authentication for the session.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>token:</strong>  OAuth2 bearer token</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">token</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "ak_requests.request.RequestsSession.setup_auth_basic", "modulename": "ak_requests.request", "qualname": "RequestsSession.setup_auth_basic", "kind": "function", "doc": "<p>Configure basic authentication for the session.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>username:</strong>  Authentication username</li>\n<li><strong>passwd:</strong>  Authentication password</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">username</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">passwd</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "ak_requests.utils", "modulename": "ak_requests.utils", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "ak_requests.utils.latest_useragent", "modulename": "ak_requests.utils", "qualname": "latest_useragent", "kind": "function", "doc": "<p>Returns the latest useragent for the specified browser based on daily list <a href=\"https://jnrbsn.github.io/user-agents/user-agents.json\">published here</a></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">browser</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;chrome&#39;</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}];

    // mirrored in build-search-index.js (part 1)
    // Also split on html tags. this is a cheap heuristic, but good enough.
    elasticlunr.tokenizer.setSeperator(/[\s\-.;&_'"=,()]+|<[^>]*>/);

    let searchIndex;
    if (docs._isPrebuiltIndex) {
        console.info("using precompiled search index");
        searchIndex = elasticlunr.Index.load(docs);
    } else {
        console.time("building search index");
        // mirrored in build-search-index.js (part 2)
        searchIndex = elasticlunr(function () {
            this.pipeline.remove(elasticlunr.stemmer);
            this.pipeline.remove(elasticlunr.stopWordFilter);
            this.addField("qualname");
            this.addField("fullname");
            this.addField("annotation");
            this.addField("default_value");
            this.addField("signature");
            this.addField("bases");
            this.addField("doc");
            this.setRef("fullname");
        });
        for (let doc of docs) {
            searchIndex.addDoc(doc);
        }
        console.timeEnd("building search index");
    }

    return (term) => searchIndex.search(term, {
        fields: {
            qualname: {boost: 4},
            fullname: {boost: 2},
            annotation: {boost: 2},
            default_value: {boost: 2},
            signature: {boost: 2},
            bases: {boost: 2},
            doc: {boost: 1},
        },
        expand: true
    });
})();